<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zexho994.github.io/blog.zexho.life</id>
    <title>Zexho&apos; blog</title>
    <updated>2022-06-22T09:59:49.294Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zexho994.github.io/blog.zexho.life"/>
    <link rel="self" href="https://zexho994.github.io/blog.zexho.life/atom.xml"/>
    <subtitle>芝兰生于幽谷，不因无人而不芳</subtitle>
    <logo>https://zexho994.github.io/blog.zexho.life/images/avatar.png</logo>
    <icon>https://zexho994.github.io/blog.zexho.life/favicon.ico</icon>
    <rights>All rights reserved 2022, Zexho&apos; blog</rights>
    <entry>
        <title type="html"><![CDATA[[MIT6.824 lab2] Raft2B-日志同步 实现要点 & 踩坑记录]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/mit6824-lab2-raft2b-ri-zhi-tong-bu-shi-xian-yao-dian-and-cai-keng-ji-lu/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/mit6824-lab2-raft2b-ri-zhi-tong-bu-shi-xian-yao-dian-and-cai-keng-ji-lu/">
        </link>
        <updated>2022-06-22T09:57:19.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>课程地址：http://nil.csail.mit.edu/6.824/2021/labs/lab-raft.html<br>
Raft中文论文：https://yuerblog.cc/wp-content/uploads/raft-zh_cn.pdf<br>
Raft动画：http://www.kailing.pub/raft/index.html</p>
</blockquote>
<h1 id="目标">目标</h1>
<p>在2A课程的基础上，服务器添加储<code>log</code>数据的要求，需要保证在各种故障环境下，保证<code>log</code>数据的强一致性。</p>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>课程地址：http://nil.csail.mit.edu/6.824/2021/labs/lab-raft.html<br>
Raft中文论文：https://yuerblog.cc/wp-content/uploads/raft-zh_cn.pdf<br>
Raft动画：http://www.kailing.pub/raft/index.html</p>
</blockquote>
<h1 id="目标">目标</h1>
<p>在2A课程的基础上，服务器添加储<code>log</code>数据的要求，需要保证在各种故障环境下，保证<code>log</code>数据的强一致性。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[MIT6.824 lab2] Raft-Leader election 代码实现 & 踩坑记录]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/mit6824-lab2-raft-leader-election-dai-ma-shi-xian-and-cai-keng-ji-lu/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/mit6824-lab2-raft-leader-election-dai-ma-shi-xian-and-cai-keng-ji-lu/">
        </link>
        <updated>2022-06-14T11:16:36.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>本文假设你已经对课程进行了部分了解，所以不对课程的要求进行过多描述，重点在代码的分析和一些踩坑记录和理解。</p>
</blockquote>
<p>课程链接： http://nil.csail.mit.edu/6.824/2020/labs/lab-raft.html</p>
<h2 id="目标">目标</h2>
<p>实现raft算法中的领导人选举部分</p>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>本文假设你已经对课程进行了部分了解，所以不对课程的要求进行过多描述，重点在代码的分析和一些踩坑记录和理解。</p>
</blockquote>
<p>课程链接： http://nil.csail.mit.edu/6.824/2020/labs/lab-raft.html</p>
<h2 id="目标">目标</h2>
<p>实现raft算法中的领导人选举部分</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mit 6.824 lab1 MapReduce 设计]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/mit-6824-lab1-mapreduce-she-ji/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/mit-6824-lab1-mapreduce-she-ji/">
        </link>
        <updated>2022-05-15T09:22:02.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="课程概述">课程概述</h1>
<p>这个课程的目的是让我们实现一个MapReduce，如果对MapReduce的基础概念不清楚，建议先看一下：</p>
<ul>
<li>课程官网网页 : http://nil.csail.mit.edu/6.824/2020/labs/lab-mr.html</li>
<li>parper: https://pdos.csail.mit.edu/6.824/papers/mapreduce.pdf</li>
<li>https://spongecaptain.cool/post/paper/mapreduce/</li>
<li>https://www.bilibili.com/video/BV1Vb411m7go?spm_id_from=333.337.search-card.all.click</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h1 id="课程概述">课程概述</h1>
<p>这个课程的目的是让我们实现一个MapReduce，如果对MapReduce的基础概念不清楚，建议先看一下：</p>
<ul>
<li>课程官网网页 : http://nil.csail.mit.edu/6.824/2020/labs/lab-mr.html</li>
<li>parper: https://pdos.csail.mit.edu/6.824/papers/mapreduce.pdf</li>
<li>https://spongecaptain.cool/post/paper/mapreduce/</li>
<li>https://www.bilibili.com/video/BV1Vb411m7go?spm_id_from=333.337.search-card.all.click</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[几个有趣的概率问题]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/ji-ge-you-qu-de-gai-lu-wen-ti/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/ji-ge-you-qu-de-gai-lu-wen-ti/">
        </link>
        <updated>2022-04-22T07:58:18.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>例子来源于《悖论-破解科学史上最复杂的9大谜团》第一章</p>
</blockquote>
<ol>
<li>消息的一块钱之谜</li>
<li>贝特箱子悖论 &amp; 小猫问题</li>
<li>蒙提霍尔悖论</li>
<li>生日悖论</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>例子来源于《悖论-破解科学史上最复杂的9大谜团》第一章</p>
</blockquote>
<ol>
<li>消息的一块钱之谜</li>
<li>贝特箱子悖论 &amp; 小猫问题</li>
<li>蒙提霍尔悖论</li>
<li>生日悖论</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[通俗理解 Basic Paxos]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/tong-su-li-jie-basic-pasox/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/tong-su-li-jie-basic-pasox/">
        </link>
        <updated>2022-04-09T00:45:33.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="一个简单的分布式场景">一个简单的分布式场景</h1>
<p>角色说明<br>
● 客户端Client，负责发起请求<br>
● 服务端Server，接收客户端的请求，并保存请求的数据</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="一个简单的分布式场景">一个简单的分布式场景</h1>
<p>角色说明<br>
● 客户端Client，负责发起请求<br>
● 服务端Server，接收客户端的请求，并保存请求的数据</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我理解的CAP]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/wo-li-jie-de-cap/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/wo-li-jie-de-cap/">
        </link>
        <updated>2022-03-20T09:50:28.000Z</updated>
        <summary type="html"><![CDATA[<p>最近在梳理我们系统架构的时候，想从分布式领域的角度来分析架构设计，但是由于之前没系统性接触过分布式相关的知识，正好借此机会来学习分布式相关的知识，并进行自己的总结。本文的目的是搞清楚什么是CAP。</p>
<blockquote>
<p>分布式系统的最大难点，就是各个节点的状态如何同步</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<p>最近在梳理我们系统架构的时候，想从分布式领域的角度来分析架构设计，但是由于之前没系统性接触过分布式相关的知识，正好借此机会来学习分布式相关的知识，并进行自己的总结。本文的目的是搞清楚什么是CAP。</p>
<blockquote>
<p>分布式系统的最大难点，就是各个节点的状态如何同步</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[快速看清lambda的本质]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/kuai-su-kan-qing-lambda-de-ben-zhi/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/kuai-su-kan-qing-lambda-de-ben-zhi/">
        </link>
        <updated>2022-02-11T11:13:57.000Z</updated>
        <summary type="html"><![CDATA[<p>在JDK8之后，Lambda表达式的功能为日常开发提供了很多便捷的操作，但是没接触过的人会对这种表达式有很大的疑惑，为什么要这样表示？我要怎么写出Lambda风格的代码？本文旨在快速理解lambda。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在JDK8之后，Lambda表达式的功能为日常开发提供了很多便捷的操作，但是没接触过的人会对这种表达式有很大的疑惑，为什么要这样表示？我要怎么写出Lambda风格的代码？本文旨在快速理解lambda。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[实现一致性Hash算法]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/shi-xian-yi-zhi-xing-hash-suan-fa/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/shi-xian-yi-zhi-xing-hash-suan-fa/">
        </link>
        <updated>2022-02-02T07:12:22.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>假设已经了解一致性Hash的相关知识，如果不了解可以先看<a href="https://www.zsythink.net/archives/1182">https://www.zsythink.net/archives/1182</a><br>
代码地址：<a href="https://github.com/zexho994/ConsistentHash">https://github.com/zexho994/ConsistentHash</a></p>
</blockquote>
<p>我们知道一致性hash的核心思想是对2^32进行取模，然后保存到一个Hash环上:</p>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>假设已经了解一致性Hash的相关知识，如果不了解可以先看<a href="https://www.zsythink.net/archives/1182">https://www.zsythink.net/archives/1182</a><br>
代码地址：<a href="https://github.com/zexho994/ConsistentHash">https://github.com/zexho994/ConsistentHash</a></p>
</blockquote>
<p>我们知道一致性hash的核心思想是对2^32进行取模，然后保存到一个Hash环上:</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用Cglib和JDK动态代理实现AOP]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/li-yong-cglib-he-jdk-dong-tai-dai-li-shi-xian-aop/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/li-yong-cglib-he-jdk-dong-tai-dai-li-shi-xian-aop/">
        </link>
        <updated>2021-11-11T11:11:07.000Z</updated>
        <summary type="html"><![CDATA[<p>前提：本文假设你已经了解AOP切面编程的基础概念<br>
项目地址：<a href="https://github.com/zexho994/IOC-AOP">https://github.com/zexho994/IOC-AOP</a></p>
]]></summary>
        <content type="html"><![CDATA[<p>前提：本文假设你已经了解AOP切面编程的基础概念<br>
项目地址：<a href="https://github.com/zexho994/IOC-AOP">https://github.com/zexho994/IOC-AOP</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RocketMQ4.9.1源码分析-Namesrv服务注册&路由发现]]></title>
        <id>https://zexho994.github.io/blog.zexho.life/post/rocketmq491-yuan-ma-fen-xi-namesrv-fu-wu-zhu-ce-andlu-you-fa-xian/</id>
        <link href="https://zexho994.github.io/blog.zexho.life/post/rocketmq491-yuan-ma-fen-xi-namesrv-fu-wu-zhu-ce-andlu-you-fa-xian/">
        </link>
        <updated>2021-10-27T14:09:19.000Z</updated>
        <summary type="html"><![CDATA[<p>何为路由中心？<br>
在通常的理解中，提到消息队列，最简单的模型如下图：</p>
]]></summary>
        <content type="html"><![CDATA[<p>何为路由中心？<br>
在通常的理解中，提到消息队列，最简单的模型如下图：</p>
]]></content>
    </entry>
</feed>